/**
     * Definition for binary tree
     * struct TreeNode {
     * int val;
     * TreeNode *left;
     * TreeNode *right;
     * TreeNode(int x) : val(x), left(NULL), right(NULL) {}
     * };
     */
    class Solution {
    public:
        vector<int> inorderTraversal(TreeNode *root) {
            // Start typing your C/C++ solution below
            // DO NOT write int main() function
              
            stack<TreeNode *> nodes;
            vector<int> res;
            if (!root) {
                return res;
            }
            TreeNode *temp=root;
            TreeNode *pre=NULL;
            while (nodes.size()!=0 || temp != NULL) {
                while (temp != NULL) {
                    nodes.push(temp);
                    temp=temp->left;
                }
                TreeNode *temp=nodes.top();
                nodes.pop();
                res.push_back(temp->val);
                temp=temp->right;
            }
            return res;
        }
    }; 
