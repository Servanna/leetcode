#include <iostream>
#include <stack>
#include <time.h>
#include <string>
#include <vector>
using namespace std;

class Solution {
public:
int largestRectangleArea(vector<int> &h) {
       h.push_back(0);
       int pointer = -1;
       int stack [h.size()];
       int sum = 0;
       for(int i = 0; i < h.size(); i++){
           if(pointer == -1 || h[stack[pointer]] < h[i]){
                stack[++pointer] = i;
           }else{
               int t = stack[pointer--];
               sum = max(sum, h[t]*(pointer == -1?i: i-stack[pointer] -1));
               i--;
           }
       }
       return sum;
}
};

int main() {
    freopen("in", "r", stdin);
    int n;
    vector<int> h;

    h.push_back(2);
    h.push_back(0);
    h.push_back(2);
    Solution s;
    clock_t t1,t2;
    t1=clock();
    int res = s.largestRectangleArea(h);
    t2=clock();
    float diff = ((float)t2-(float)t1);
    cout << "res:" << res << "\n" << "time:" <<diff<<"\n";

}
