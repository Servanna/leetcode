/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    void recoverTree(TreeNode *root) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        vector<TreeNode*> nodes;
        vector<int> l;
        inorder(nodes, l, root);
        sort(l.begin(), l.end());
        for(int i = 0; i < nodes.size(); i++){
            nodes[i]->val = l[i];  
        }
    }
    void inorder(vector<TreeNode*>& nodes, vector<int>& l, TreeNode *root){
        if(root == NULL){
            return;
        }
        inorder(nodes, l, root->left);
        l.push_back(root->val);
        nodes.push_back(root);
        inorder(nodes, l, root->right);
    }
};
