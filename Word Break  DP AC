class Solution {
public:
    bool wordBreak(string s, unordered_set<string> &dict) {
        // IMPORTANT: Please reset any member data you declared, as
        // the same Solution instance will be reused for each test case.
        bool *dp = new bool[s.size()];
        set<int> lens;
        for(int i = 0; i < s.size(); i++)
            dp[i] = false;
        for(string tmp : dict){
            if(lens.count(tmp.size()) == 0)
                lens.insert(tmp.size());
        }
        for(int i = 0; i < s.size(); i++){
            if(i == 0 || dp[i-1]){
                for(set<int>::iterator iter = lens.begin(); iter != lens.end(); iter++){
                    if(*iter > s.size() - i) break;
                    if(dict.count(s.substr(i, *iter)) > 0) dp[i + *iter - 1] = true;
                }
            }
        }
        return dp[s.size() - 1];
    }
};
