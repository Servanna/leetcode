/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *reverseBetween(ListNode *head, int m, int n) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        ListNode *h = new ListNode(0);
        h->next = head;
        ListNode *pre = h;
        ListNode *cur = head;
        
        for(int i = 1; i < m; i ++){
            pre = cur;
            cur = cur->next;
        }
        int c = n - m;
        ListNode *post = cur->next;
        while(c > 0){
            ListNode* tmp = post->next;
            post->next = cur;
            cur = post;
            post = tmp;
            c--;
        }
        //ListNode * tmp = pre->next;
        pre->next = cur;
        //tmp->next = post;
        head = h->next;
        delete h;
        return head;
    }
};
