class Solution {
public:
    int candy(vector<int> &ratings) {
        // Note: The Solution object is instantiated only once and is reused by each test case.
        int sum = 0;
        unordered_map<int, vector<int> > m;
        set<int> s;
        int* res = new int[ratings.size()];
        for(int i = 0; i < ratings.size(); i++){
            res[i] = 1;
            if(m.count(ratings[i]) == 0){
                vector<int> v;
                m[ratings[i]] = v;
            }
            m[ratings[i]].push_back(i);
            s.insert(ratings[i]);
        }
        vector<int> cp(ratings.begin(), ratings.end());
        sort(cp.begin(), cp.end());
        int cur;
        for(set<int>::iterator itr = s.begin(); itr != s.end(); itr++){
            cur = *itr;
            int pos;
            for(int j = 0; j < m[cur].size(); j++){
                pos = m[cur][j];
                int tmp = pos;
                // increase left
                while(pos-1 >= 0 && ratings[pos-1] > ratings[pos] && res[pos-1] <= res[pos]){
                    res[pos-1] = res[pos]+1;
                    pos--;
                }
                pos = tmp;
                //increase right
                while(pos+1<= ratings.size()-1&& ratings[pos+1] > ratings[pos] && res[pos+1] <= res[pos]){
                    res[pos+1] = res[pos]+1;
                    pos++;
                }
            }
        }
        for(int i = 0; i < ratings.size(); i++){
            sum += res[i];
        }
        return sum;
    }
};
