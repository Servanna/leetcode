class Solution {
public:
    vector<vector<int> > threeSum(vector<int> &num) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        vector<vector<int> > result;
        vector<int> output;
        if(num.size() < 3) return result;
        std::sort(num.begin(), num.end());
        int i = 0;
        int j, k, target;
        for(; i < num.size() -2; i++){
            if(num[i] > 0) return result;
            j = i + 1;
            k = num.size() - 1;
            target = 0 - num[i];
            while(j < k){
                if(num[j] + num[k] == target){
                    output.push_back(num[i]);
                    output.push_back(num[j]);
                    output.push_back(num[k]);
                    result.push_back(output);
                    output.clear();
                    j++;// forget to add
                    //k--;
                    while(num[k] == num[k+1]) k--;
                    while(num[j] == num[j-1]) j++;
                }else if(num[j] + num[k] > target){
                    k--;
                }else{
                    j++;
                }
                //wrong position!!
                //while(num[k] == num[k+1]) k--; 
                //while(num[j] == num[j-1]) j++;
            }
            while(i < num.size() - 1 && num[i+1] == num[i]) i++;        
        }
        return result;
    }
};
