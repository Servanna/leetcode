class Solution {
public:
    int largestRectangleArea(vector<int> &height) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if(height.size() == 0)
            return 0;
        int L[height.size()];
        int R[height.size()];
        L[0] = 0;
        R[height.size()-1] = height.size() - 1;
        for(int i = 1; i < height.size(); i++){
            if(height[i] > height[i-1]){
                L[i] = i;
            }else{
                int j = L[i-1];
                while(height[i] < height[j] && j != 0){
                    j = L[j];
                }
                L[i] = j;
            }
        }
        for(int j = height.size() - 2; j >= 0; j--){
            if(height[j] > height[j+1]){
                height[j] = j;
            }else{
                int i = R[j+1];
                while(height[j] < height[i] && i != height.size() - 1){
                    i = R[i];
                }
                R[j] = i;
            }
        }
        int sum = 0;
        for(int i = 0; i < height.size() - 1; i++){
            sum = max(sum, height[i]*(R[i]-L[i]+1));
        }
    }
};
