/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> postorderTraversal(TreeNode *root) {
        // IMPORTANT: Please reset any member data you declared, as
        // the same Solution instance will be reused for each test case.
        vector<int> ret;
        if(!root) return ret;
        stack<TreeNode *> q1, q2;
        q1.push(root);
        while(q1.size() > 0){
            TreeNode * tmp = q1.top();
            q1.pop();
            q2.push(tmp);
            if(tmp->left){
                q1.push(tmp->left);
            }
            if(tmp->right){
                q1.push(tmp->right);
            }
        }
        while(q2.size() > 0){
            TreeNode * tmp = q2.top();
            q2.pop();
            ret.push_back(tmp->val);
        }
        return ret;
    }
};
